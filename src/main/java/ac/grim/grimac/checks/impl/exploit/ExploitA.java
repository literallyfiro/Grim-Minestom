package ac.grim.grimac.checks.impl.exploit;

import ac.grim.grimac.checks.Check;
import ac.grim.grimac.checks.CheckData;
import ac.grim.grimac.checks.type.PacketCheck;
import ac.grim.grimac.player.GrimPlayer;
import net.minestom.server.event.player.PlayerPacketEvent;
import net.minestom.server.network.packet.client.play.ClientChatMessagePacket;
import net.minestom.server.network.packet.client.play.ClientNameItemPacket;

import java.util.regex.Pattern;

@CheckData(name = "ExploitA", experimental = true)
public class ExploitA extends Check implements PacketCheck {

    public ExploitA(GrimPlayer playerData) {
        super(playerData);
    }

    private static final Pattern EXPLOIT_PATTERN = Pattern.compile("\\$\\{.+}");

    /*
     WARNING: This doesn't fully patch Log4J! It is highly recommended you update your server
     jar to a version that has true Log4J migrations instead of using a plugin. However, this
     patch is better than nothing and will still be useful for punishing players who attempt
     to abuse this exploit.
     */
    @Override
    public void onPacketReceive(PlayerPacketEvent event) {
        if (event.getPacket() instanceof ClientChatMessagePacket wrapper) {
            // todo minestom what
//            if (true) return; // TODO: Fix PacketEvents pls retrooper
            String message = wrapper.message();
            if (checkString(message)) {
                event.setCancelled(true);
                player.onPacketCancel();
            }
        } else if (event.getPacket() instanceof ClientNameItemPacket wrapper) {
            String name = wrapper.itemName();
            if (checkString(name)) {
                event.setCancelled(true);
                player.onPacketCancel();
            }
        }
    }

    public boolean checkString(String message) {
        return EXPLOIT_PATTERN.matcher(message).matches() && flagAndAlert();
    }
}
